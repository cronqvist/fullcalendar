"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("path");
const errors_1 = require("../errors");
const PkgGitRepo_1 = require("../git/PkgGitRepo");
const version_utils_1 = require("./version-utils");
/*
KNOWN ISSUE: when diffing from subrepos, doesn't use pager.
TODO: detect if in an interactive shell...
  https://stackoverflow.com/questions/7080458/test-whether-the-actual-output-is-a-terminal-or-not-in-node-js
  and then concat outputs togther, forcing color, into node-pager (can't use pure bash)
*/
function runDiff(monoRepo, subjectPkgs, versionish, otherGitArgs) {
    return __awaiter(this, void 0, void 0, function* () {
        if (!versionish) {
            versionish = version_utils_1.computeBaseVersion(monoRepo.rootPkg, subjectPkgs);
            // TODO: if fails, error should talk about the git tag not found
        }
        let commitHash = yield version_utils_1.resolveVersionish(monoRepo, subjectPkgs, versionish); // TODO: pass-in pkgGitRepo?
        if (!commitHash) {
            throw new errors_1.VersionishNotFoundError(versionish);
        }
        let pkgGitRepo = yield PkgGitRepo_1.buildPkgGitRepo(monoRepo.rootDir, subjectPkgs);
        return runDiffOnRepo(pkgGitRepo, commitHash, otherGitArgs, !pkgGitRepo.submodules.length // can't do pager because we need to do multiple `git diff` commands
        );
    });
}
exports.runDiff = runDiff;
function runDiffOnRepo(pkgGitRepo, commitHash, otherGitArgs, doPager) {
    return __awaiter(this, void 0, void 0, function* () {
        let ignoreMatches = [];
        for (let pkg of pkgGitRepo.pkgs) {
            for (let ignoreFile of pkg.ignoreFiles) {
                ignoreMatches.push(path_1.join(pkg.relDir, ignoreFile));
            }
        }
        yield pkgGitRepo.runDiff(// is a passthrough
        pkgGitRepo.pkgs.map((pkg) => pkg.relDir), ignoreMatches, [commitHash].concat(otherGitArgs), doPager);
        for (let submodule of pkgGitRepo.submodules) {
            let submoduleCommitHash = yield pkgGitRepo.getSubmoduleCommit(commitHash, submodule.rootDir);
            // means this subrepo didn't exist at time of the tag
            // TODO: reevaluate if this is correct behavior. should everything instead?
            if (submoduleCommitHash) {
                yield runDiffOnRepo(submodule, submoduleCommitHash, otherGitArgs, doPager);
            }
        }
    });
}
