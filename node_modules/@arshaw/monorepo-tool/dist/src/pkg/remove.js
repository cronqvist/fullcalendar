"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const async_1 = require("../util/async");
const dep_objs_1 = require("./dep-objs");
const dep_file_rm_1 = require("./dep-file-rm");
const dep_json_fs_1 = require("./dep-json-fs");
function removeDepsFromPkgs(monoRepo, subjectPkgs, delArgs, npmRunTimeArgs) {
    return __awaiter(this, void 0, void 0, function* () {
        let allInnerPkgsByName = monoRepo.innerPkgsByName;
        let { pkgsByName, externalPkgArgs } = dep_objs_1.processPkgArgs(delArgs, allInnerPkgsByName);
        return async_1.allSettledVoid(subjectPkgs.map((subjectPkg) => removeDepsFromPkg(monoRepo, subjectPkg, allInnerPkgsByName, pkgsByName, externalPkgArgs, npmRunTimeArgs)));
    });
}
exports.removeDepsFromPkgs = removeDepsFromPkgs;
function removeDepsFromPkg(monoRepo, subjectPkg, allInnerPkgsByName, pkgsByName, // the ones to add
externalPkgNames, // the ones to add
npmRunTimeArgs) {
    return __awaiter(this, void 0, void 0, function* () {
        // remove external deps. will write to package.json
        yield dep_json_fs_1.removeExternalDeps(monoRepo, subjectPkg, allInnerPkgsByName, externalPkgNames, npmRunTimeArgs);
        // remove internals deps. will write to package.json also
        yield Promise.all([
            dep_json_fs_1.removeDepEntries(subjectPkg, pkgsByName),
            dep_file_rm_1.removeExactPkgDepFiles(subjectPkg, pkgsByName)
        ]);
    });
}
exports.removeDepsFromPkg = removeDepsFromPkg;
