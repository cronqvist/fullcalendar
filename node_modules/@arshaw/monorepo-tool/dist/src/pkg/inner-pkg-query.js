"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const util_1 = require("util");
const fs = require("fs");
const path_1 = require("path");
const globCb = require("glob");
const async_1 = require("../util/async");
const InnerPkg_1 = require("./InnerPkg");
const glob = util_1.promisify(globCb);
const fileExists = util_1.promisify(fs.exists);
function queryInnerPkgs(condensedConfigs, baseDir) {
    return expandPkgConfigs(condensedConfigs, baseDir).then((expandedConfigs) => {
        return async_1.collectResults(expandedConfigs.map((pkgConfig) => {
            return fileExists(path_1.join(baseDir, pkgConfig.path, 'package.json')).then((bool) => {
                if (bool) {
                    let pkg = new InnerPkg_1.default(pkgConfig, baseDir);
                    return pkg.loadJson().then(() => [pkg]);
                }
                else {
                    return [];
                }
            });
        }));
    });
}
exports.queryInnerPkgs = queryInnerPkgs;
function expandPkgConfigs(pkgConfigs, baseDir) {
    return async_1.collectResults(pkgConfigs.map((pkgConfig) => {
        return expandPkgConfig(pkgConfig, baseDir);
    }));
}
function expandPkgConfig(pkgConfig, baseDir) {
    return glob(pkgConfig.path, {
        cwd: baseDir
    }).then((paths) => {
        return paths.map((path) => {
            return Object.assign({}, pkgConfig, { path });
        });
    });
}
