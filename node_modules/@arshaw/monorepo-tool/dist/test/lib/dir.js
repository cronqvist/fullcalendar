"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = require("fs");
const path_1 = require("path");
const mkdirp = require("mkdirp");
const rimraf = require("rimraf");
const tmp = require("tmp");
const DIR_RE = /\/$/;
const JSON_RE = /\.json$/;
// TODO: bash, add exec flag
function buildDirStruct(struct, config = {}) {
    let dest;
    if (config.dest) {
        dest = config.dest;
        mkdirp.sync(dest);
    }
    else {
        let tmpDir = config.tmpDir;
        if (tmpDir) {
            if (!path_1.isAbsolute(tmpDir)) {
                tmpDir = path_1.join(process.cwd(), tmpDir);
            }
            mkdirp.sync(tmpDir);
        }
        dest = tmp.dirSync({ dir: tmpDir }).name;
    }
    buildDirStructAtDest(struct, dest);
    return {
        path: dest,
        delete: () => rimraf.sync(dest)
    };
}
exports.buildDirStruct = buildDirStruct;
function buildDirStructAtDest(struct, dest) {
    for (let entry in struct) {
        let entryContent = struct[entry];
        let entryPath = path_1.join(dest, entry);
        if (DIR_RE.test(entry)) {
            if (!fs_1.existsSync(entryPath)) {
                fs_1.mkdirSync(entryPath);
            }
            buildDirStructAtDest(entryContent, entryPath);
        }
        else if (JSON_RE.test(entry)) {
            fs_1.writeFileSync(entryPath, JSON.stringify(entryContent, null, '  ') + '\n', { encoding: 'utf8' });
        }
        else {
            fs_1.writeFileSync(entryPath, entryContent, { encoding: 'utf8' });
        }
    }
}
